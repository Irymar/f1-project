name: Deploy Docker Images to EC2 and S3

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: 🔐 Decode SSH key from EC2_KEY_B64 (для shell)
        run: |
          echo "${{ secrets.EC2_KEY_B64 }}" | base64 -d > private.pem
          chmod 600 private.pem

      - name: Ensure deploy dir on EC2 exists and clean old config
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            DEPLOY_DIR="/home/ubuntu/f1-store-deploy"
            echo "📁 Creating deploy dir if not exists..."
            sudo mkdir -p $DEPLOY_DIR
            echo "🧹 Cleaning old files..."
            sudo rm -rf $DEPLOY_DIR/*

      - name: Upload docker-compose.prod.yml to EC2
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "infra/docker-compose.prod.yml"
          target: "/home/ubuntu/f1-store-deploy/"
          strip_components: 1

      - name: Deploy containers on EC2
        run: |
          echo "📦 Sending ENV file + running compose"
          ssh -o StrictHostKeyChecking=no -i private.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
            set -e
            cd /home/ubuntu/f1-store-deploy

            echo "🔐 Writing .env from secrets"
            printf "%b" "${{ secrets.ENV_FILE }}" | sudo tee .env > /dev/null

            echo "🛑 Stopping old containers..."
            sudo docker-compose -f docker-compose.prod.yml down || true

            echo "🗑️ Pruning..."
            sudo docker container prune -f || true

            echo "🐳 Pulling images"
            sudo docker pull ivar26/f1-backend-rds
            sudo docker pull ivar26/f1-backend-redis
            sudo docker pull ivar26/f1-frontend

            echo "🚀 Starting new containers..."
            sudo docker-compose -f docker-compose.prod.yml up -d --remove-orphans

            echo "🌐 Testing connection"
            curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/test_connection/
          EOF
