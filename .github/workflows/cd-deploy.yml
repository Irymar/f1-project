name: Deploy Docker Images to EC2 and S3

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Ensure deploy dir on EC2 exists and clean old config
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            DEPLOY_DIR="/home/ubuntu/f1-store-deploy"
            echo "üìÅ Creating deploy dir if not exists..."
            sudo mkdir -p $DEPLOY_DIR
            echo "üßπ Cleaning old files..."
            sudo rm -rf $DEPLOY_DIR/*

      - name: Upload docker-compose.prod.yml to EC2
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "infra/docker-compose.prod.yml"
          target: "/home/ubuntu/f1-store-deploy/"
          strip_components: 1

      - name: Deploy containers on EC2
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private.pem
          chmod 600 private.pem

          echo "üì¶ Sending ENV file + running compose"
          ssh -o StrictHostKeyChecking=no -i private.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e
            cd /home/ubuntu/f1-store-deploy

            echo "üîê Writing .env from secrets"
            echo "${{ secrets.ENV_FILE }}" | sudo tee .env > /dev/null

            echo "üõë Stopping old containers..."
            sudo docker-compose -f docker-compose.prod.yml down || true

            echo "üóëÔ∏è Pruning..."
            sudo docker container prune -f || true

            echo "üê≥ Pulling images"
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/f1-backend-rds
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/f1-backend-redis
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/f1-frontend

            echo "üöÄ Starting new containers..."
            sudo docker-compose -f docker-compose.prod.yml up -d --remove-orphans

            echo "üåê Testing connection"
            curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/test_connection/
          EOF

      - name: Upload frontend to S3
        run: |
          aws s3 sync ./frontend s3://${{ secrets.S3_BUCKET_NAME }} --delete
          echo "üì¶ S3 contents:"
          aws s3 ls s3://${{ secrets.S3_BUCKET_NAME }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Invalidate CloudFront cache
        if: env.CLOUDFRONT_DIST_ID != ''
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          CLOUDFRONT_DIST_ID: ${{ secrets.CLOUDFRONT_DIST_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          distribution-id: ${{ env.CLOUDFRONT_DIST_ID }}
          paths: '/*'
