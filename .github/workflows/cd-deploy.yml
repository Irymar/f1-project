name: Deploy to EC2 and S3

on:
  workflow_dispatch:  # —Ä—É—á–Ω–∏–π –∑–∞–ø—É—Å–∫

jobs:
  deploy:
    name: CD to EC2 and S3
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      ### üîê –î–µ–ø–ª–æ–π –Ω–∞ EC2
      - name: Deploy backend to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/f1-store-main

            echo "${{ secrets.ENV_FILE }}" > .env

            git pull origin main

            docker pull ${{ secrets.DOCKER_USERNAME }}/f1-backend-rds
            docker pull ${{ secrets.DOCKER_USERNAME }}/f1-backend-redis
            docker pull ${{ secrets.DOCKER_USERNAME }}/f1-frontend

            docker-compose -f docker-compose.yml up -d

      ### ‚òÅÔ∏è –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è frontend –¥–æ S3
      - name: Upload frontend to S3
        run: |
          aws s3 sync ./frontend s3://${{ secrets.S3_BUCKET_NAME }} --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      ### ‚ùÑÔ∏è –Ü–Ω–≤–∞–ª—ñ–¥–∞—Ü—ñ—è CloudFront –∫–µ—à—É
      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DIST_ID }} --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
